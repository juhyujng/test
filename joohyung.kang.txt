추가된 메세지입니다.
추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.
추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.
추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.추가된 메세지입니다.
현재 가장 좋은 구성 관리의 생산성 향상을 위한 도구- 앤서블
1-1. 앤서블의 현재
1.1.1. 데브옵스(devops)
기존 운영 시스템의 개발 방식
개발자들에 의해 코드 작성 및 빌드 -> 테스트 -> 출시(release) -> 운영
- 운영자들에 의해 수정사항이 개발자들에게 전달

데브옵스 운영 시스템의 개발 방식
계획(JIRA) -> 코드(GIT) -> 빌드(GRADLE) -> XPTMXM(JUNIT) -> 출시(JENKINS) -> 배포(ANSIBLE) -> 운영(ANSIBLE) -> 상태감시(monitor는 NAGIOS)
-> 계획(JIRA) -> 코드(GIT) -> 빌드(GRADLE) -> XPTMXM(JUNIT) -> 출시(JENKINS) -> 배포(ANSIBLE) -> 운영(ANSIBLE) -> 상태감시(monitor는 NAGIOS)

순환 반복

1.1.2 앤서블의 인기도
GITHUB의 STAR 순위

1.1.3 구성 관리 도구의 비교
PUPPET, CHEF, SALT, ANSIBLE

1.1.4 앤서블 설치 제한 사항
모든 OS에서 가능하지만 윈도우에서는 앤서블을 설치하여 사용할 수가 없음, 하지만 앤서블을 통한 구성 관리는 가능

1.2 앤서블의 특징

1.2.1 에이전트가 없는 구조
1.2.2 IT팀 간 협업의 극대화
1.2.3 다양한 운영체제를 통합 관리
1.2.4 높은 보안과 신뢰성
1.2.5 멱등성
1.2.6 용도에 따라 다양하게 확장 가능
1.2.7 낮은 학습 곡선
1.2.8 오픈 소스

1-3 앤서블의 미래
점유율이 높아지고 있음

2. 앤서블을 체험하기

2-1 가벼운 테스트를 위한 환경 구축









